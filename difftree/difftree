#!/bin/sh
################################################################################
################################################################################
# difftree
#
# Copyright (c) 2019-2022, James S. Crook
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# The views and conclusions contained in the software and documentation are those
# of the authors and should not be interpreted as representing official policies,
# either expressed or implied, of the FreeBSD Project.
################################################################################
################################################################################
#
# difftree lists the difference(s) of two trees of regular file(s). 3 arguments
# are required: directory_1  directory_2  find_target [...]
# 
# Options are:
# -b : use cmp instead of diff (for binary file comparison)
# -n : list the difference(s), if any, of file NAMES before listing the
#      difference(s), if any, of the CONTENTS of the file(s)
# -v : increase the verbosity by 1
#
# Note: shell globbing may expand find_target names. If that's not desired,
# "escape" (e.g., surround by single quotes) find_target(s) - or, turn off
# globbing. For example, if the current working directory was /etc:
# difftree DIR1 DIR2 'host*'
#
################################################################################
# James S. Crook	2019/10/27	v0.0.1 Initial version
# James S. Crook	2021/11/29	v0.0.2 Changed indent (4 chars)
################################################################################

PROG=$(basename $0)

function usagemsg {
    echo "usage: $PROG [-b] [-n] [-v] dir1 dir2 find_target [...]"
    echo "	Where: -b : binary comparison (use cmp instead of diff)"
    echo "	Where: -c : do NOT list file CONTENT difference(s)"
    echo "	Where: -n : list file NAME difference(s)"
    echo "	Where: -v : increase verbosity"
}

COMPAREPROGRAM=diff
FILECONTENTSDIFFERENCESFLAG=1
FILENAMESDIFFERENCESFLAG=0
VERBOSITY=0
DIR1FILENAMESFILE=/tmp/${PROG}_dir1_list.$$
DIR2FILENAMESFILE=/tmp/${PROG}_dir2_list.$$
DIFFERENCESFILE=/tmp/${PROG}_diff.$$
SINGLELINE="----------------------"
DOUBLELINE="===================================================="
OPTIONS="bcnv"
while getopts "$OPTIONS" OPTION; do
    case $OPTION in
	b) COMPAREPROGRAM=cmp;;
	c) FILECONTENTSDIFFERENCESFLAG=0;;
	n) FILENAMESDIFFERENCESFLAG=1;;
	v) VERBOSITY=$((VERBOSITY+1));;
	*) usagemsg; exit 1;;
    esac
done
shift $((OPTIND-1))

if [[ $# -lt 3 ]]; then
    usagemsg
    exit 1
fi

DIR1=$1; DIR2=$2; shift; shift

if [[ ! (-d $DIR1 && -x $DIR1 ) ]]; then
    echo "'$DIR1' is not a readable directory"
    exit 1
fi

if [[ ! (-d $DIR2 && -x $DIR2 ) ]]; then
    echo "'$DIR2' is not a readable directory"
    exit 1
fi

# Change the Inter File Separator string from [space, tab, \n] to [\n]
OLDIFS="$IFS"
IFS=$'\n'

(cd $DIR1; eval find $@ -type f | sed 's:^\./::' | sort) > $DIR1FILENAMESFILE
(cd $DIR2; eval find $@ -type f | sed 's:^\./::' | sort) > $DIR2FILENAMESFILE

if [[ $FILENAMESDIFFERENCESFLAG -ne 0 ]]; then
    diff $DIR1FILENAMESFILE $DIR2FILENAMESFILE > $DIFFERENCESFILE
    echo $DOUBLELINE
    echo "File NAME list difference(s) < '$DIR1' : > '$DIR2'"
    echo $DOUBLELINE
    if [[ -s $DIFFERENCESFILE ]]; then
	cat $DIFFERENCESFILE
    fi
    echo $DOUBLELINE
fi

if [[ $FILECONTENTSDIFFERENCESFLAG -ne 0 ]]; then
    for RELPATHNAME in $(sort -u $DIR1FILENAMESFILE $DIR2FILENAMESFILE); do
	if [ $VERBOSITY -ge 2 ]; then
	    echo "RELPATHNAME=[$RELPATHNAME]"
	fi

	if [[ ( -f "$DIR1/$RELPATHNAME" && -r "$DIR1/$RELPATHNAME" ) ]]; then
	    if [[ ( -f "$DIR2/$RELPATHNAME" && -r "$DIR2/$RELPATHNAME" ) ]]; then
		$COMPAREPROGRAM "$DIR1/$RELPATHNAME" "$DIR2/$RELPATHNAME" > $DIFFERENCESFILE 2>&1
		SAMECHECKRETURNVALUE=$?
		if [[ $SAMECHECKRETURNVALUE -eq 0 ]]; then		# files are identical
		    if [[ $VERBOSITY -gt 0 ]]; then
			echo "== $SINGLELINE '$RELPATHNAME'"
		    fi
		else											# files differ
		    echo "!= $SINGLELINE '$RELPATHNAME' $SINGLELINE"
		    sed 's:.*:   &:' $DIFFERENCESFILE
		    echo "   $SINGLELINE$SINGLELINE"
		fi
	    else
		echo "!> $SINGLELINE '$DIR2:$RELPATHNAME', not found/no access"
	    fi
	else
	    echo "!< $SINGLELINE '$DIR1:$RELPATHNAME', not found/no access"
	fi
    done
fi
IFS="$OLDIFS"

rm -f $DIFFERENCESFILE $DIR1FILENAMESFILE $DIR2FILENAMESFILE
exit 0
